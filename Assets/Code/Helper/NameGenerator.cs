using UnityEngine;

namespace Endciv
{
	public class NameGenerator
	{
		private static string[] nameMale;
		private static string[] NameMale
		{
			get
			{
				if(nameMale == null)
					nameMale = new string[]
					{
						"Aiden",
						"Jackson",
						"Mason",
						"Liam",
						"Jacob",
						"Jayden",
						"Ethan",
						"Noah",
						"Lucas",
						"Logan",
						"Caleb",
						"Caden",
						"Jack",
						"Ryan",
						"Connor",
						"Michael",
						"Elijah",
						"Brayden",
						"Benjamin",
						"Nicholas",
						"Alexander",
						"William",
						"Matthew",
						"James",
						"Landon",
						"Nathan",
						"Dylan",
						"Evan",
						"Luke",
						"Andrew",
						"Gabriel",
						"Gavin",
						"Joshua",
						"Owen",
						"Daniel",
						"Carter",
						"Tyler",
						"Cameron",
						"Christian",
						"Wyatt",
						"Henry",
						"Eli",
						"Joseph",
						"Max",
						"Isaac",
						"Samuel",
						"Anthony",
						"Grayson",
						"Zachary",
						"David",
						"Christopher",
						"John",
						"Isaiah",
						"Levi",
						"Jonathan",
						"Oliver",
						"Chase",
						"Cooper",
						"Tristan",
						"Colton",
						"Austin",
						"Colin",
						"Charlie",
						"Dominic",
						"Parker",
						"Hunter",
						"Thomas",
						"Alex",
						"Ian",
						"Jordan",
						"Cole",
						"Julian",
						"Aaron",
						"Carson",
						"Miles",
						"Blake",
						"Brody",
						"Adam",
						"Sebastian",
						"Adrian",
						"Nolan",
						"Sean",
						"Riley",
						"Bentley",
						"Xavier",
						"Hayden",
						"Jeremiah",
						"Jason",
						"Jake",
						"Asher",
						"Micah",
						"Jace",
						"Brandon",
						"Josiah",
						"Hudson",
						"Nathaniel",
						"Bryson",
						"Ryder",
						"Justin",
						"Bryce"
					};
				return nameMale;
			}
		}

		private static string[] nameFemale;
		private static string[] NameFemale
		{
			get
			{
				if(nameFemale == null)
					nameFemale = new string[]
					{
						"Sophia",
						"Emma",
						"Isabella",
						"Olivia",
						"Ava",
						"Lily",
						"Chloe",
						"Madison",
						"Emily",
						"Abigail",
						"Addison",
						"Mia",
						"Madelyn",
						"Ella",
						"Hailey",
						"Kaylee",
						"Avery",
						"Kaitlyn",
						"Riley",
						"Aubrey",
						"Brooklyn",
						"Peyton",
						"Layla",
						"Hannah",
						"Charlotte",
						"Bella",
						"Natalie",
						"Sarah",
						"Grace",
						"Amelia",
						"Kylie",
						"Arianna",
						"Anna",
						"Elizabeth",
						"Sophie",
						"Claire",
						"Lila",
						"Aaliyah",
						"Gabriella",
						"Elise",
						"Lillian",
						"Samantha",
						"Makayla",
						"Audrey",
						"Alyssa",
						"Ellie",
						"Alexis",
						"Isabelle",
						"Savannah",
						"Evelyn",
						"Leah",
						"Keira",
						"Allison",
						"Maya",
						"Lucy",
						"Sydney",
						"Taylor",
						"Molly",
						"Lauren",
						"Harper",
						"Scarlett",
						"Brianna",
						"Victoria",
						"Liliana",
						"Aria",
						"Kayla",
						"Annabelle",
						"Gianna",
						"Kennedy",
						"Stella",
						"Reagan",
						"Julia",
						"Bailey",
						"Alexandra",
						"Jordyn",
						"Nora",
						"Carolin",
						"Mackenzie",
						"Jasmine",
						"Jocelyn",
						"Kendall",
						"Morgan",
						"Nevaeh",
						"Maria",
						"Eva",
						"Juliana",
						"Abby",
						"Alexa",
						"Summer",
						"Brooke",
						"Penelope",
						"Violet",
						"Kate",
						"Hadley",
						"Ashlyn",
						"Sadie",
						"Paige",
						"Katherine",
						"Sienna",
						"Piper",
					};
				return nameFemale;
			}
		}

		private static string[] nameLastName;
		private static string[] NameLastName
		{
			get
			{
				if(nameLastName == null)
					nameLastName = new string[]
					{
						"Smith",
						"Johnson",
						"Williams",
						"Jones",
						"Brown",
						"Davis",
						"Miller",
						"Wilson",
						"Moore",
						"Taylor",
						"Anderson",
						"Thomas",
						"Jackson",
						"White",
						"Harris",
						"Martin",
						"Thompson",
						"Garcia",
						"Martinez",
						"Robinson",
						"Clark",
						"Rodriguez",
						"Lewis",
						"Lee",
						"Walker",
						"Hall",
						"Allen",
						"Young",
						"Hernandez",
						"King",
						"Wright",
						"Lopez",
						"Hill",
						"Scott",
						"Green",
						"Adams",
						"Baker",
						"Gonzalez",
						"Nelson",
						"Carter",
						"Mitchell",
						"Perez",
						"Roberts",
						"Turner",
						"Phillips",
						"Campbell",
						"Parker",
						"Evans",
						"Edwards",
						"Collins",
						"Stewart",
						"Sanchez",
						"Morris",
						"Rogers",
						"Reed",
						"Cook",
						"Morgan",
						"Bell",
						"Murphy",
						"Bailey",
						"Rivera",
						"Cooper",
						"Richardson",
						"Cox",
						"Howard",
						"Ward",
						"Torres",
						"Peterson",
						"Gray",
						"Ramirez",
						"James",
						"Watson",
						"Brooks",
						"Kelly",
						"Sanders",
						"Price",
						"Bennett",
						"Wood",
						"Barnes",
						"Ross",
						"Henderson",
						"Coleman",
						"Jenkins",
						"Perry",
						"Powell",
						"Long",
						"Patterson",
						"Hughes",
						"Flores",
						"Washington",
						"Butler",
						"Simmons",
						"Foster",
						"Gonzales",
						"Bryant",
						"Alexander",
						"Russell",
						"Griffin",
						"Diaz",
						"Hayes",
					};
				return nameLastName;
			}
		}		

		public string GetRandomName(ELivingBeingGender gender, bool withLastname = true)
		{
			string newname;

			if (gender == ELivingBeingGender.Male)
				newname = NameMale[Random.Range(0, NameMale.Length)];
			else
				newname = NameFemale[Random.Range(0, NameFemale.Length)];

			if (withLastname)
				newname += " " + NameLastName[Random.Range(0, NameLastName.Length)];

			return newname;
		}
	}
}